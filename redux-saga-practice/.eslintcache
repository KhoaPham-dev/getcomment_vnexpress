[{"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\index.js":"1","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reportWebVitals.js":"2","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\App.js":"3","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\index.js":"4","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\index.js":"5","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\comments.js":"6","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\comments.js":"7","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\actions\\comments.js":"8","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\comments.js":"9","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\CommentsList.js":"10","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\data.js":"11","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\Sort.js":"12","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\NewPostIdForm.js":"13","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\userProfiles.js":"14"},{"size":1146,"mtime":1610618067658,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":3823,"mtime":1611341935135,"results":"18","hashOfConfig":"16"},{"size":129,"mtime":1610097541312,"results":"19","hashOfConfig":"16"},{"size":162,"mtime":1610098179350,"results":"20","hashOfConfig":"16"},{"size":1799,"mtime":1611342343751,"results":"21","hashOfConfig":"16"},{"size":1817,"mtime":1611342588570,"results":"22","hashOfConfig":"16"},{"size":1449,"mtime":1611342123618,"results":"23","hashOfConfig":"16"},{"size":1260,"mtime":1611338595128,"results":"24","hashOfConfig":"16"},{"size":11008,"mtime":1611340971706,"results":"25","hashOfConfig":"16"},{"size":48699,"mtime":1611333249578,"results":"26","hashOfConfig":"16"},{"size":622,"mtime":1611324011382,"results":"27","hashOfConfig":"16"},{"size":1369,"mtime":1611309451638,"results":"28","hashOfConfig":"16"},{"size":32781,"mtime":1611334885696,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1c6zus3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\index.js",[],["62","63"],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reportWebVitals.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\App.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\index.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\index.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\comments.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\comments.js",["64"],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\actions\\comments.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\comments.js",["65","66","67"],"import axios from \"axios\";\r\nimport { result, replies } from \"./data\";\r\nimport { userProfiles } from \"./userProfiles\";\r\nexport const getComments = ({ objectId, offset, sort }) => {\r\n  return axios.get(\"get\", {\r\n    params: {\r\n      limit: 25,\r\n      offset,\r\n      siteid: 1000000,\r\n      objecttype: 1,\r\n      objectid: objectId,\r\n      sort_by: sort,\r\n    },\r\n    onDownloadProgress: (progressEvent) => {\r\n      let percentCompleted = Math.round(\r\n        (progressEvent.loaded * 100) / progressEvent.total\r\n      );\r\n      console.log(progressEvent.lengthComputable);\r\n      console.log(percentCompleted);\r\n    },\r\n  });\r\n  //return result;\r\n};\r\n\r\nexport const getUserProfiles = (items) => {\r\n  let url =\r\n    \"https://cors-anywhere.herokuapp.com/https://my.vnexpress.net/apifrontend/getusersprofile?\";\r\n  items.forEach((e) => {\r\n    if (e.userid) url += \"myvne_users_id[]=\" + e.userid + \"&\";\r\n  });\r\n  return axios.get(url);\r\n  //return userProfiles;\r\n};\r\n\r\nexport const getReplies = ({ objectId, commentId, limit, sort }) => {\r\n  return axios.get(\"getreplay\", {\r\n    params: {\r\n      limit: limit,\r\n      siteid: 1000000,\r\n      objecttype: 1,\r\n      objectid: objectId,\r\n      id: commentId,\r\n      sort_by: sort,\r\n    },\r\n  });\r\n  //return replies;\r\n};\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\CommentsList.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88"],"import { ListGroupItem, ListGroup } from \"reactstrap\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport \"./CommentsList.css\";\r\nexport default class CommentsList extends Component {\r\n  state = {\r\n    isReachLimit: false,\r\n  };\r\n  onLoadMore = (flag) => {\r\n    flag\r\n      ? this.props.handleLoadMore(this.props.offset + 25)\r\n      : this.props.handleLoadMore(this.props.offset - 25);\r\n  };\r\n  render() {\r\n    let comments = this.props.comments.items.items || [];\r\n    let userItems = this.props.comments.userItems;\r\n    return (\r\n      <ListGroup>\r\n        <section id=\"cmt-list\">\r\n          {comments.map((comment, i) => {\r\n            if (this.state.isReachLimit || i < 5)\r\n              return (\r\n                <ListGroupItem\r\n                  style={{ border: \"none\", padding: 0 }}\r\n                  key={comment.comment_id}\r\n                >\r\n                  <div className=\"item\">\r\n                    <div className=\"user\">\r\n                      <div className=\"avatar\">\r\n                        <a className=\"avatar__content\">\r\n                          {comment.userid &&\r\n                          userItems[comment.userid] &&\r\n                          userItems[comment.userid].user_avatar !==\r\n                            \"https://s.vnecdn.net/myvne/i/v1/graphics/img_60x60.gif\" ? (\r\n                            <img\r\n                              src={`${userItems[comment.userid].user_avatar\r\n                                .split(\"src\")\r\n                                .join(\"c60x60\")}`}\r\n                            />\r\n                          ) : (\r\n                            comment.full_name.substring(0, 1).toUpperCase()\r\n                          )}\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"content\">\r\n                        <a className=\"content__username\">\r\n                          {comment.userid &&\r\n                          userItems[comment.userid] &&\r\n                          userItems[comment.userid].user_fullname\r\n                            ? userItems[comment.userid].user_fullname\r\n                            : comment.full_name}\r\n                        </a>\r\n                        &nbsp;\r\n                        <span\r\n                          className=\"content__comment\"\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: comment.content,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"behavior\">\r\n                      <a className=\"like\" rel={comment.comment_id}>\r\n                        <span className=\"like__total_like\">\r\n                          {comment.userlike}\r\n                        </span>\r\n                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                      </a>\r\n                      <a\r\n                        className=\"behavior__reply\"\r\n                        rel={comment.comment_id}\r\n                        parent={comment.comment_id}\r\n                      >\r\n                        Trả lời\r\n                      </a>\r\n                      <a rel={comment.comment_id} className=\"behavior__share\">\r\n                        Chia sẻ\r\n                      </a>\r\n                      <span className=\"behavior__time_com\">{comment.time}</span>\r\n                      <a\r\n                        className=\"behavior__report_comment\"\r\n                        rel={comment.comment_id}\r\n                      >\r\n                        Vi phạm\r\n                      </a>\r\n                    </div>\r\n                    {/* show reply */}\r\n                    <div className=\"reply\">\r\n                      {comment.replys.total && comment.replys.items.length > 0\r\n                        ? comment.replys.items.map((reply) => {\r\n                            return (\r\n                              <div\r\n                                style={{ border: \"none\", padding: 0 }}\r\n                                key={reply.comment_id}\r\n                              >\r\n                                <div className=\"item\">\r\n                                  <div className=\"user\">\r\n                                    <div className=\"avatar\">\r\n                                      <a className=\"avatar__content\">\r\n                                        {reply.full_name\r\n                                          .substring(0, 1)\r\n                                          .toUpperCase()}\r\n                                      </a>\r\n                                    </div>\r\n                                    <div className=\"content\">\r\n                                      <a className=\"content__username\">\r\n                                        {reply.full_name}\r\n                                      </a>\r\n                                      &nbsp;\r\n                                      <span\r\n                                        className=\"content__comment\"\r\n                                        dangerouslySetInnerHTML={{\r\n                                          __html: reply.content,\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </div>\r\n                                  <div className=\"behavior\">\r\n                                    <a className=\"like\" rel={reply.comment_id}>\r\n                                      <span className=\"like__total_like\">\r\n                                        {reply.userlike}\r\n                                      </span>\r\n                                      <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </a>\r\n                                    <a\r\n                                      className=\"behavior__reply\"\r\n                                      rel={reply.comment_id}\r\n                                      parent={reply.comment_id}\r\n                                    >\r\n                                      Trả lời\r\n                                    </a>\r\n                                    <a\r\n                                      rel={reply.comment_id}\r\n                                      className=\"behavior__share\"\r\n                                    >\r\n                                      Chia sẻ\r\n                                    </a>\r\n                                    <span className=\"behavior__time_com\">\r\n                                      {reply.time}\r\n                                    </span>\r\n                                    <a\r\n                                      className=\"behavior__report_comment\"\r\n                                      rel={reply.comment_id}\r\n                                    >\r\n                                      Vi phạm\r\n                                    </a>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            );\r\n                          })\r\n                        : null}\r\n                    </div>\r\n                    {comment.replys.total &&\r\n                    comment.replys.items.length < comment.replys.total ? (\r\n                      <div\r\n                        className=\"count_reply\"\r\n                        onClick={() => {\r\n                          this.props.handleRequestReplies(\r\n                            comment.article_id,\r\n                            comment.comment_id\r\n                          );\r\n                        }}\r\n                      >\r\n                        <a className=\"count_reply__text\">\r\n                          {this.props.isLoading ===\r\n                          `reply_${comment.comment_id}` ? (\r\n                            <Skeleton circle={true} height={50} width={50} />\r\n                          ) : (\r\n                            <span>\r\n                              {comment.replys.total -\r\n                                comment.replys.items.length}{\" \"}\r\n                              trả lời\r\n                            </span>\r\n                          )}\r\n                        </a>\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                </ListGroupItem>\r\n              );\r\n          })}\r\n          <div className=\"comment-more-block\">\r\n            {!this.state.isReachLimit ? (\r\n              <a\r\n                className=\"comment-more-block__btn\"\r\n                onClick={() => {\r\n                  this.setState({ isReachLimit: true });\r\n                }}\r\n              >\r\n                Xem thêm\r\n              </a>\r\n            ) : this.props.comments.isLoading === \"loadmore\" ? (\r\n              <Skeleton className=\"comment-more-block\" height={50} />\r\n            ) : (\r\n              <div className=\"route-page\">\r\n                <span>Trang</span>\r\n                <a\r\n                  className={`route-page__prev ${\r\n                    Math.floor(this.props.comments.offset / 25) <= 0\r\n                      ? \"btn-unclick\"\r\n                      : null\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (Math.floor(this.props.comments.offset / 25) > 0) {\r\n                      this.onLoadMore(false);\r\n                      this.setState({ scrolling: true });\r\n                    }\r\n                  }}\r\n                ></a>\r\n                <a className=\"route-page__nth-page\">\r\n                  {Math.floor(this.props.comments.offset / 25) + 1}\r\n                </a>\r\n                <a\r\n                  className={`route-page__next ${\r\n                    Math.floor(\r\n                      (this.props.comments.items.total -\r\n                        this.props.comments.offset) /\r\n                        25\r\n                    ) <= 0\r\n                      ? \"btn-unclick\"\r\n                      : null\r\n                  }`}\r\n                  onClick={() => {\r\n                    if (\r\n                      Math.floor(\r\n                        (this.props.comments.items.total -\r\n                          this.props.comments.offset) /\r\n                          25\r\n                      ) > 0\r\n                    ) {\r\n                      this.onLoadMore(true);\r\n                      this.setState({ scrolling: true });\r\n                    }\r\n                  }}\r\n                ></a>\r\n                {this.state.scrolling\r\n                  ? window.scrollTo({\r\n                      top: document.getElementById(\"cmt-list\").offsetTop - 50,\r\n                      behavior: \"smooth\",\r\n                    }) || this.setState({ scrolling: false })\r\n                  : null}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </section>\r\n      </ListGroup>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\data.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\Sort.js",["89","90"],"import \"./Sort.css\";\r\nconst Sort = ({ sorting, handleSorting }) => {\r\n  return (\r\n    <div className=\"sort\">\r\n      <a\r\n        onClick={() => {\r\n          handleSorting(\"like\");\r\n        }}\r\n        className={\r\n          \"sort__care\" + (sorting === \"like\" ? \" sort__care--active\" : \"\")\r\n        }\r\n      >\r\n        Quan tâm nhất\r\n      </a>\r\n      <a\r\n        onClick={() => {\r\n          handleSorting(\"time\");\r\n        }}\r\n        className={\r\n          \"sort__new\" + (sorting === \"time\" ? \" sort__new--active\" : \"\")\r\n        }\r\n      >\r\n        Mới nhất\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\nexport default Sort;\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\NewPostIdForm.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\userProfiles.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":38,"nodeType":"97","messageId":"98","endLine":1,"endColumn":48},{"ruleId":"95","severity":1,"message":"99","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"100","line":2,"column":18,"nodeType":"97","messageId":"98","endLine":2,"endColumn":25},{"ruleId":"95","severity":1,"message":"101","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":23,"column":38,"nodeType":"104","messageId":"105","endLine":23,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":33,"column":25,"nodeType":"108","endLine":33,"endColumn":56},{"ruleId":"109","severity":1,"message":"110","line":38,"column":29,"nodeType":"108","endLine":42,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":49,"column":25,"nodeType":"108","endLine":49,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":66,"column":23,"nodeType":"108","endLine":66,"endColumn":68},{"ruleId":"106","severity":1,"message":"107","line":72,"column":23,"nodeType":"108","endLine":76,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":79,"column":23,"nodeType":"108","endLine":79,"endColumn":79},{"ruleId":"106","severity":1,"message":"107","line":83,"column":23,"nodeType":"108","endLine":86,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":102,"column":39,"nodeType":"108","endLine":102,"endColumn":70},{"ruleId":"106","severity":1,"message":"107","line":109,"column":39,"nodeType":"108","endLine":109,"endColumn":72},{"ruleId":"106","severity":1,"message":"107","line":122,"column":37,"nodeType":"108","endLine":122,"endColumn":80},{"ruleId":"106","severity":1,"message":"107","line":128,"column":37,"nodeType":"108","endLine":132,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":135,"column":37,"nodeType":"108","endLine":138,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":144,"column":37,"nodeType":"108","endLine":147,"endColumn":38},{"ruleId":"106","severity":1,"message":"107","line":168,"column":25,"nodeType":"108","endLine":168,"endColumn":58},{"ruleId":"106","severity":1,"message":"107","line":188,"column":15,"nodeType":"108","endLine":193,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":201,"column":17,"nodeType":"108","endLine":213,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":201,"column":17,"nodeType":"108","endLine":213,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":214,"column":17,"nodeType":"108","endLine":214,"endColumn":53},{"ruleId":"111","severity":1,"message":"112","line":217,"column":17,"nodeType":"108","endLine":239,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":217,"column":17,"nodeType":"108","endLine":239,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":5,"column":7,"nodeType":"108","endLine":12,"endColumn":8},{"ruleId":"106","severity":1,"message":"107","line":15,"column":7,"nodeType":"108","endLine":22,"endColumn":8},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'takeLatest' is defined but never used.","Identifier","unusedVar","'result' is defined but never used.","'replies' is defined but never used.","'userProfiles' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation"]