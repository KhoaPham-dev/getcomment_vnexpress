[{"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\index.js":"1","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reportWebVitals.js":"2","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\App.js":"3","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\index.js":"4","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\index.js":"5","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\comments.js":"6","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\comments.js":"7","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\actions\\comments.js":"8","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\comments.js":"9","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\CommentsList.js":"10","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\data.js":"11","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\Sort.js":"12","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\NewPostIdForm.js":"13","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\userProfiles.js":"14"},{"size":1146,"mtime":1610618067658,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":4024,"mtime":1611422512323,"results":"18","hashOfConfig":"16"},{"size":129,"mtime":1610097541312,"results":"19","hashOfConfig":"16"},{"size":162,"mtime":1610098179350,"results":"20","hashOfConfig":"16"},{"size":1799,"mtime":1611342343751,"results":"21","hashOfConfig":"16"},{"size":1817,"mtime":1611342588570,"results":"22","hashOfConfig":"16"},{"size":1449,"mtime":1611342123618,"results":"23","hashOfConfig":"16"},{"size":1260,"mtime":1611338595128,"results":"24","hashOfConfig":"16"},{"size":10571,"mtime":1611420603440,"results":"25","hashOfConfig":"16"},{"size":48699,"mtime":1611333249578,"results":"26","hashOfConfig":"16"},{"size":622,"mtime":1611324011382,"results":"27","hashOfConfig":"16"},{"size":1366,"mtime":1611423704703,"results":"28","hashOfConfig":"16"},{"size":32781,"mtime":1611334885696,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1c6zus3",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\index.js",[],["63","64"],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reportWebVitals.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\App.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\index.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\index.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\reducers\\comments.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\sagas\\comments.js",["65"],"import { takeEvery, fork, call, put, takeLatest } from \"redux-saga/effects\";\r\n\r\nimport * as actions from \"../actions/comments\";\r\nimport * as api from \"../api/comments\";\r\n\r\nfunction* getComments(action) {\r\n  try {\r\n    let result = yield call(api.getComments, {\r\n      objectId: action.payload.objectId,\r\n      offset: action.payload.offset,\r\n      sort: action.payload.sort,\r\n    });\r\n    let userProfiles = yield call(api.getUserProfiles, result.data.data.items);\r\n    yield put(\r\n      actions.getCommentsSuccess({\r\n        objectId: action.payload.objectId,\r\n        offset: action.payload.offset,\r\n        items: result.data.data,\r\n        userItems: userProfiles.data.arrUsers,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(actions.handleError({ error: error.message }));\r\n  }\r\n}\r\n\r\nfunction* watchGetCommentsRequest() {\r\n  yield takeEvery(actions.Types.GET_COMMENTS_REQUEST, getComments);\r\n}\r\n\r\nfunction* getReplies(action) {\r\n  try {\r\n    let result = yield call(api.getReplies, {\r\n      objectId: action.payload.objectId,\r\n      commentId: action.payload.commentId,\r\n      limit: action.payload.limit || 3,\r\n      sort: action.payload.sort,\r\n    });\r\n    //let userProfiles = yield call(api.getUserProfiles, result.data.data.items);\r\n    yield put(\r\n      actions.getRepliesSuccess({\r\n        replies: result.data.data.items,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    yield put(actions.handleError({ error: error.message }));\r\n  }\r\n}\r\nfunction* watchGetRepliesRequest() {\r\n  yield takeEvery(actions.Types.GET_REPLIES_REQUEST, getReplies);\r\n}\r\nfunction* watchHandleSorting() {\r\n  yield takeEvery(actions.Types.HANDLE_SORTING, getComments);\r\n}\r\nconst commentsSaga = [\r\n  fork(watchGetCommentsRequest),\r\n  fork(watchGetRepliesRequest),\r\n  fork(watchHandleSorting),\r\n];\r\n\r\nexport default commentsSaga;\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\actions\\comments.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\comments.js",["66","67","68"],"import axios from \"axios\";\r\nimport { result, replies } from \"./data\";\r\nimport { userProfiles } from \"./userProfiles\";\r\nexport const getComments = ({ objectId, offset, sort }) => {\r\n  return axios.get(\"get\", {\r\n    params: {\r\n      limit: 25,\r\n      offset,\r\n      siteid: 1000000,\r\n      objecttype: 1,\r\n      objectid: objectId,\r\n      sort_by: sort,\r\n    },\r\n    onDownloadProgress: (progressEvent) => {\r\n      let percentCompleted = Math.round(\r\n        (progressEvent.loaded * 100) / progressEvent.total\r\n      );\r\n      console.log(progressEvent.lengthComputable);\r\n      console.log(percentCompleted);\r\n    },\r\n  });\r\n  //return result;\r\n};\r\n\r\nexport const getUserProfiles = (items) => {\r\n  let url =\r\n    \"https://cors-anywhere.herokuapp.com/https://my.vnexpress.net/apifrontend/getusersprofile?\";\r\n  items.forEach((e) => {\r\n    if (e.userid) url += \"myvne_users_id[]=\" + e.userid + \"&\";\r\n  });\r\n  return axios.get(url);\r\n  //return userProfiles;\r\n};\r\n\r\nexport const getReplies = ({ objectId, commentId, limit, sort }) => {\r\n  return axios.get(\"getreplay\", {\r\n    params: {\r\n      limit: limit,\r\n      siteid: 1000000,\r\n      objecttype: 1,\r\n      objectid: objectId,\r\n      id: commentId,\r\n      sort_by: sort,\r\n    },\r\n  });\r\n  //return replies;\r\n};\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\CommentsList.js",["69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"import React, { Component } from \"react\";\r\nimport { List, Avatar, Space, Skeleton } from \"antd\";\r\nimport { MessageOutlined, LikeOutlined, StarOutlined } from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./CommentsList.css\";\r\n\r\nconst IconText = ({ icon, text }) => (\r\n  <Space>\r\n    {React.createElement(icon)}\r\n    {text}\r\n  </Space>\r\n);\r\n\r\nexport default class CommentsList extends Component {\r\n  state = {\r\n    limit: 5,\r\n  };\r\n  onLoadMore = (page) => {\r\n    this.props.handleLoadMore((page - 1) * 25);\r\n  };\r\n  loadMore = () => {\r\n    return (\r\n      <div className=\"comment-more-block\">\r\n        <a\r\n          className=\"comment-more-block__btn\"\r\n          onClick={() => {\r\n            this.setState({ limit: 25 });\r\n          }}\r\n        >\r\n          Xem thêm\r\n        </a>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let comments =\r\n      (this.props.comments.items.items &&\r\n        this.props.comments.items.items.slice(0, this.state.limit)) ||\r\n      [];\r\n    if (this.props.comments.items.items && this.state.limit >= 25) {\r\n      let before = [];\r\n      let i = 0;\r\n      while (\r\n        before.length + comments.length <\r\n        this.props.comments.items.total\r\n      ) {\r\n        if (this.props.comments.offset > before.length)\r\n          before.push(this.props.comments.items.items[i++]);\r\n        else comments.push(this.props.comments.items.items[i++]);\r\n        if (i == 25) i = 0;\r\n      }\r\n      comments = [...before, ...comments];\r\n    }\r\n    let userItems = this.props.comments.userItems;\r\n    return (\r\n      <List\r\n        className=\"comments-list\"\r\n        itemLayout=\"vertical\"\r\n        size=\"large\"\r\n        loadMore={\r\n          this.state.limit < 25 &&\r\n          this.props.comments.items.total > this.state.limit\r\n            ? this.loadMore()\r\n            : null\r\n        }\r\n        pagination={\r\n          this.state.limit >= 25\r\n            ? {\r\n                onChange: (page) => {\r\n                  this.onLoadMore(page);\r\n                },\r\n                pageSize: this.state.limit,\r\n              }\r\n            : null\r\n        }\r\n        dataSource={comments}\r\n        renderItem={(comment) => (\r\n          <section id=\"cmt-list\">\r\n            <List.Item\r\n              style={{ borderBottom: \"none\", paddingBottom: 0, paddingLeft: 0 }}\r\n              key={comment.comment_id}\r\n              actions={[\r\n                <a className=\"like\" rel={comment.comment_id}>\r\n                  <IconText\r\n                    className=\"total_like\"\r\n                    icon={LikeOutlined}\r\n                    text={comment.userlike}\r\n                    key=\"list-vertical-like-o\"\r\n                  />\r\n                </a>,\r\n                <a\r\n                  className=\"reply-text\"\r\n                  rel={comment.comment_id}\r\n                  parent={comment.comment_id}\r\n                >\r\n                  Trả lời\r\n                </a>,\r\n                <a rel={comment.comment_id} className=\"share\">\r\n                  Chia sẻ\r\n                </a>,\r\n                <span className=\"time_com\">{comment.time}</span>,\r\n                <a className=\"report_comment\" rel={comment.comment_id}>\r\n                  Vi phạm\r\n                </a>,\r\n              ]}\r\n            >\r\n              <Skeleton\r\n                avatar\r\n                title={false}\r\n                loading={\r\n                  this.props.comments.isLoading === \"loadmore\" ? true : false\r\n                }\r\n                active\r\n              >\r\n                <List.Item.Meta\r\n                  avatar={\r\n                    <div className=\"avatar\">\r\n                      <a className=\"avatar__content\">\r\n                        {comment.userid &&\r\n                        userItems[comment.userid] &&\r\n                        userItems[comment.userid].user_avatar !==\r\n                          \"https://s.vnecdn.net/myvne/i/v1/graphics/img_60x60.gif\" ? (\r\n                          <Avatar\r\n                            src={`${userItems[comment.userid].user_avatar\r\n                              .split(\"src\")\r\n                              .join(\"c60x60\")}`}\r\n                          />\r\n                        ) : (\r\n                          comment.full_name.substring(0, 1).toUpperCase()\r\n                        )}\r\n                      </a>\r\n                    </div>\r\n                  }\r\n                  title={\r\n                    <div className=\"content\">\r\n                      <a className=\"content__username\">\r\n                        {comment.userid &&\r\n                        userItems[comment.userid] &&\r\n                        userItems[comment.userid].user_fullname\r\n                          ? userItems[comment.userid].user_fullname\r\n                          : comment.full_name}\r\n                      </a>\r\n                    </div>\r\n                  }\r\n                />\r\n\r\n                <div className=\"content\">\r\n                  <p\r\n                    className=\"content__comment\"\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: comment.content,\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Skeleton>\r\n            </List.Item>\r\n\r\n            {/* show reply */}\r\n\r\n            <div className=\"reply\">\r\n              {comment.replys.total && comment.replys.items.length > 0 ? (\r\n                <List\r\n                  itemLayout=\"vertical\"\r\n                  dataSource={comment.replys.items}\r\n                  renderItem={(reply) => (\r\n                    <List.Item\r\n                      style={{\r\n                        borderBottom: \"none\",\r\n                        paddingBottom: 0,\r\n                        paddingLeft: 0,\r\n                        paddingTop: 0,\r\n                        marginTop: 16,\r\n                      }}\r\n                      key={reply.comment_id}\r\n                      actions={[\r\n                        <a className=\"like\" rel={reply.comment_id}>\r\n                          <IconText\r\n                            className=\"total_like\"\r\n                            icon={LikeOutlined}\r\n                            text={reply.userlike}\r\n                            key=\"list-vertical-like-o\"\r\n                          />\r\n                        </a>,\r\n                        <a\r\n                          className=\"reply-text\"\r\n                          rel={reply.comment_id}\r\n                          parent={reply.comment_id}\r\n                        >\r\n                          Trả lời\r\n                        </a>,\r\n                        <a rel={reply.comment_id} className=\"share\">\r\n                          Chia sẻ\r\n                        </a>,\r\n                        <span className=\"time_com\">{reply.time}</span>,\r\n                        <a className=\"report_comment\" rel={reply.comment_id}>\r\n                          Vi phạm\r\n                        </a>,\r\n                      ]}\r\n                    >\r\n                      <Skeleton\r\n                        avatar\r\n                        title={false}\r\n                        loading={\r\n                          this.props.comments.isLoading === \"loadmore\"\r\n                            ? true\r\n                            : false\r\n                        }\r\n                        active\r\n                      >\r\n                        <List.Item.Meta\r\n                          avatar={\r\n                            <div className=\"avatar\">\r\n                              <a className=\"avatar__content\">\r\n                                {reply.userid &&\r\n                                userItems[reply.userid] &&\r\n                                userItems[reply.userid].user_avatar !==\r\n                                  \"https://s.vnecdn.net/myvne/i/v1/graphics/img_60x60.gif\" ? (\r\n                                  <Avatar\r\n                                    src={`${userItems[reply.userid].user_avatar\r\n                                      .split(\"src\")\r\n                                      .join(\"c60x60\")}`}\r\n                                  />\r\n                                ) : (\r\n                                  reply.full_name.substring(0, 1).toUpperCase()\r\n                                )}\r\n                              </a>\r\n                            </div>\r\n                          }\r\n                          title={\r\n                            <div className=\"content\">\r\n                              <a className=\"content__username\">\r\n                                {reply.userid &&\r\n                                userItems[reply.userid] &&\r\n                                userItems[reply.userid].user_fullname\r\n                                  ? userItems[reply.userid].user_fullname\r\n                                  : reply.full_name}\r\n                              </a>\r\n                            </div>\r\n                          }\r\n                        />\r\n                        <div className=\"content\">\r\n                          <p\r\n                            className=\"content__comment\"\r\n                            dangerouslySetInnerHTML={{\r\n                              __html: reply.content,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </Skeleton>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              ) : null}\r\n            </div>\r\n            {comment.replys.total &&\r\n            comment.replys.items.length < comment.replys.total ? (\r\n              <div\r\n                className=\"count_reply\"\r\n                onClick={() => {\r\n                  this.props.handleRequestReplies(\r\n                    comment.article_id,\r\n                    comment.comment_id\r\n                  );\r\n                }}\r\n              >\r\n                <Skeleton\r\n                  avatar\r\n                  title={false}\r\n                  loading={\r\n                    this.props.isLoading === `reply_${comment.comment_id}` ||\r\n                    this.props.isLoading === \"loadmore\"\r\n                      ? true\r\n                      : false\r\n                  }\r\n                  active\r\n                >\r\n                  <a className=\"count_reply__text\">\r\n                    <span>\r\n                      {comment.replys.total - comment.replys.items.length} trả\r\n                      lời\r\n                    </span>\r\n                  </a>\r\n                </Skeleton>\r\n              </div>\r\n            ) : null}\r\n          </section>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\data.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\Sort.js",["86","87"],"import \"./Sort.css\";\r\nconst Sort = ({ sorting, handleSorting }) => {\r\n  return (\r\n    <div className=\"sort\">\r\n      <a\r\n        onClick={() => {\r\n          handleSorting(\"like\");\r\n        }}\r\n        className={\r\n          \"sort__care\" + (sorting === \"like\" ? \" sort__care--active\" : \"\")\r\n        }\r\n      >\r\n        Quan tâm nhất\r\n      </a>\r\n      <a\r\n        onClick={() => {\r\n          handleSorting(\"time\");\r\n        }}\r\n        className={\r\n          \"sort__new\" + (sorting === \"time\" ? \" sort__new--active\" : \"\")\r\n        }\r\n      >\r\n        Mới nhất\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\nexport default Sort;\r\n","C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\components\\NewPostIdForm.js",[],"C:\\Users\\super\\OneDrive - student.hcmute.edu.vn\\Practice react-redux-saga\\vnexpress_getcomment\\redux-saga-practice\\src\\api\\userProfiles.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":38,"nodeType":"94","messageId":"95","endLine":1,"endColumn":48},{"ruleId":"92","severity":1,"message":"96","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"97","line":2,"column":18,"nodeType":"94","messageId":"95","endLine":2,"endColumn":25},{"ruleId":"92","severity":1,"message":"98","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":22},{"ruleId":"92","severity":1,"message":"99","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":25},{"ruleId":"92","severity":1,"message":"100","line":3,"column":41,"nodeType":"94","messageId":"95","endLine":3,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":24,"column":9,"nodeType":"103","endLine":29,"endColumn":10},{"ruleId":"104","severity":1,"message":"105","line":51,"column":15,"nodeType":"106","messageId":"107","endLine":51,"endColumn":17},{"ruleId":"101","severity":1,"message":"102","line":84,"column":17,"nodeType":"103","endLine":84,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":92,"column":17,"nodeType":"103","endLine":96,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":99,"column":17,"nodeType":"103","endLine":99,"endColumn":63},{"ruleId":"101","severity":1,"message":"102","line":103,"column":17,"nodeType":"103","endLine":103,"endColumn":72},{"ruleId":"101","severity":1,"message":"102","line":119,"column":23,"nodeType":"103","endLine":119,"endColumn":54},{"ruleId":"101","severity":1,"message":"102","line":137,"column":23,"nodeType":"103","endLine":137,"endColumn":56},{"ruleId":"101","severity":1,"message":"102","line":177,"column":25,"nodeType":"103","endLine":177,"endColumn":68},{"ruleId":"101","severity":1,"message":"102","line":185,"column":25,"nodeType":"103","endLine":189,"endColumn":26},{"ruleId":"101","severity":1,"message":"102","line":192,"column":25,"nodeType":"103","endLine":192,"endColumn":69},{"ruleId":"101","severity":1,"message":"102","line":196,"column":25,"nodeType":"103","endLine":196,"endColumn":78},{"ruleId":"101","severity":1,"message":"102","line":214,"column":31,"nodeType":"103","endLine":214,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":232,"column":31,"nodeType":"103","endLine":232,"endColumn":64},{"ruleId":"101","severity":1,"message":"102","line":278,"column":19,"nodeType":"103","endLine":278,"endColumn":52},{"ruleId":"101","severity":1,"message":"102","line":5,"column":7,"nodeType":"103","endLine":12,"endColumn":8},{"ruleId":"101","severity":1,"message":"102","line":15,"column":7,"nodeType":"103","endLine":22,"endColumn":8},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'takeLatest' is defined but never used.","Identifier","unusedVar","'result' is defined but never used.","'replies' is defined but never used.","'userProfiles' is defined but never used.","'MessageOutlined' is defined but never used.","'StarOutlined' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]